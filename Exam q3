3)  Consider the code for the Link, Stack and Queue classes.  Note Stack and Queue are not complete.

---------------------------------------------------------------
public class Link{
  Object thing;
  Link next;
}
---------------------------------------------------------------


----------------------------------------------------------------
public class Stack{
  Link head;
  int length=0;
  
  public Stack(Link first){
    head=first;
    length=1;}
  
  public void push(Link newlink){
    newlink.next=head;
    head=newlink;}
    length=length+1;}
    
   public Link peek(Link newlink){
    return head;}
    
  public pop(){
  Link=peek();
  first=first.nextLink;
  return first.Link;}
  
--------------------------------------------------------------
  
----------------------------------------------------------------
public class Queue{
  Link head;
  int length=0;
 
  public Queue(Link first){
    head=first;
    length=1;} 
    
  public void add(Link newlink){
    newlink.next=head;
    head=newlink;}
    length=length+1;}
  
  public Link peek(head){
  return this.head;}
  
  public remove (this.head);{
  head=peek();
  newLink=this.newLink;}
  

  
--------------------------------------------------------------

a)  Explain what a Stack is.  Specify if it is LIFO or FIFO.
Stack means that structure where gives output first that recently come into. Usually people call this LIFO structure.
b)  Complete the Stack class by writing the "pop" method.
c)  Explain what a Queue is.  Specify if it is LIFO or FIFO.
The Queue is a tool that has opposite property. Simply, it has FIFO structure, the last information will be first as a output. 
d)  Complete the Queue class by writing the "peek" and "remove" methods.
